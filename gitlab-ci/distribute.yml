.stage deploy:
  stage: deploy stage
  variables:
    GIT_STRATEGY: none
  tags:
    - BigCloudStage
  only:
    - tags
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $REGISTRY_HOST
    - docker service update --with-registry-auth --image=$REGISTRY_HOST/$CI_PROJECT_PATH/php-fpm:$CI_COMMIT_TAG {{STACK_NAME}}_backend-php-fpm
    - if [[ $(docker service inspect {{STACK_NAME}}_backend-php-fpm --format "{{.UpdateStatus.State}}") = "rollback_completed" ]]; then exit 1; fi
    - docker service update --with-registry-auth --image=$REGISTRY_HOST/$CI_PROJECT_PATH/nginx:$CI_COMMIT_TAG {{STACK_NAME}}_backend-nginx
    - if [[ $(docker service inspect {{STACK_NAME}}_backend-nginx --format "{{.UpdateStatus.State}}") = "rollback_completed" ]]; then docker service rollback {{STACK_NAME}}_backend-php-fpm; exit 1; fi
    - docker pull $REGISTRY_HOST/$CI_PROJECT_PATH/php-fpm:$CI_COMMIT_TAG
    - docker tag $REGISTRY_HOST/$CI_PROJECT_PATH/php-fpm:$CI_COMMIT_TAG $REGISTRY_HOST/$CI_PROJECT_PATH/php-fpm:stage
    - docker push $REGISTRY_HOST/$CI_PROJECT_PATH/php-fpm:stage
    - docker pull $REGISTRY_HOST/$CI_PROJECT_PATH/nginx:$CI_COMMIT_TAG
    - docker tag $REGISTRY_HOST/$CI_PROJECT_PATH/nginx:$CI_COMMIT_TAG $REGISTRY_HOST/$CI_PROJECT_PATH/nginx:stage
    - docker push $REGISTRY_HOST/$CI_PROJECT_PATH/nginx:stage
  environment:
    name: Stage
    url: https://{{APPLICATION_DOMAIN_STAGE}}

.pre deploy:
  stage: deploy pre
  variables:
    GIT_STRATEGY: none
  tags:
    - {{APPLICATION_NAME}}
    - pre
  only:
    - tags
  when: manual
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $REGISTRY_HOST
    - docker service update --with-registry-auth --image=$REGISTRY_HOST/$CI_PROJECT_PATH/php-fpm:$CI_COMMIT_TAG {{STACK_NAME}}_backend-php-fpm
    - if [[ $(docker service inspect {{STACK_NAME}}_backend-php-fpm --format "{{.UpdateStatus.State}}") = "rollback_completed" ]]; then exit 1; fi
    - docker service update --with-registry-auth --image=$REGISTRY_HOST/$CI_PROJECT_PATH/nginx:$CI_COMMIT_TAG {{STACK_NAME}}_backend-nginx
    - if [[ $(docker service inspect {{STACK_NAME}}_backend-nginx --format "{{.UpdateStatus.State}}") = "rollback_completed" ]]; then docker service rollback {{STACK_NAME}}_backend-php-fpm; exit 1; fi
    - docker pull $REGISTRY_HOST/$CI_PROJECT_PATH/php-fpm:$CI_COMMIT_TAG
    - docker tag $REGISTRY_HOST/$CI_PROJECT_PATH/php-fpm:$CI_COMMIT_TAG $REGISTRY_HOST/$CI_PROJECT_PATH/php-fpm:pre
    - docker push $REGISTRY_HOST/$CI_PROJECT_PATH/php-fpm:pre
    - docker pull $REGISTRY_HOST/$CI_PROJECT_PATH/nginx:$CI_COMMIT_TAG
    - docker tag $REGISTRY_HOST/$CI_PROJECT_PATH/nginx:$CI_COMMIT_TAG $REGISTRY_HOST/$CI_PROJECT_PATH/nginx:pre
    - docker push $REGISTRY_HOST/$CI_PROJECT_PATH/nginx:pre
  environment:
    name: Pre
    url: https://{{APPLICATION_DOMAIN_PRE}}

.prod deploy:
  stage: deploy prod
  variables:
    GIT_STRATEGY: none
  tags:
    - {{APPLICATION_NAME}}
    - prod
  only:
    - tags
  when: manual
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $REGISTRY_HOST
    - docker service update --with-registry-auth --image=$REGISTRY_HOST/$CI_PROJECT_PATH/php-fpm:$CI_COMMIT_TAG {{STACK_NAME}}_backend-php-fpm
    - if [[ $(docker service inspect {{STACK_NAME}}_backend-php-fpm --format "{{.UpdateStatus.State}}") = "rollback_completed" ]]; then exit 1; fi
    - docker service update --with-registry-auth --image=$REGISTRY_HOST/$CI_PROJECT_PATH/nginx:$CI_COMMIT_TAG {{STACK_NAME}}_backend-nginx
    - if [[ $(docker service inspect {{STACK_NAME}}_backend-nginx --format "{{.UpdateStatus.State}}") = "rollback_completed" ]]; then docker service rollback {{STACK_NAME}}_backend-php-fpm; exit 1; fi
    - docker pull $REGISTRY_HOST/$CI_PROJECT_PATH/php-fpm:$CI_COMMIT_TAG
    - docker tag $REGISTRY_HOST/$CI_PROJECT_PATH/php-fpm:$CI_COMMIT_TAG $REGISTRY_HOST/$CI_PROJECT_PATH/php-fpm:prod
    - docker push $REGISTRY_HOST/$CI_PROJECT_PATH/php-fpm:prod
    - docker pull $REGISTRY_HOST/$CI_PROJECT_PATH/nginx:$CI_COMMIT_TAG
    - docker tag $REGISTRY_HOST/$CI_PROJECT_PATH/nginx:$CI_COMMIT_TAG $REGISTRY_HOST/$CI_PROJECT_PATH/nginx:prod
    - docker push $REGISTRY_HOST/$CI_PROJECT_PATH/nginx:prod
  environment:
    name: Prod
    url: https://{{APPLICATION_DOMAIN_PROD}}
